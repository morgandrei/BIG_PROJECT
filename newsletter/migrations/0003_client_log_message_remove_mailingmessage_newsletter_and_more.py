# Generated by Django 4.2.6 on 2023-10-21 08:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('newsletter', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='контактный email')),
                ('fullname', models.CharField(max_length=150, verbose_name='клиент')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='комментарий')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='клиент')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='дата попытки')),
                ('time', models.TimeField(auto_now_add=True, verbose_name='время попытки')),
                ('status', models.BooleanField(default=False, verbose_name='статус попытки')),
                ('server_response', models.TextField(blank=True, null=True, verbose_name='ответ сервера')),
            ],
            options={
                'verbose_name': 'лог рассылки',
                'verbose_name_plural': 'логи рассылок',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True, verbose_name='тема письма')),
                ('content', models.TextField(blank=True, null=True, verbose_name='тело письма')),
            ],
            options={
                'verbose_name': 'письмо',
                'verbose_name_plural': 'письма',
            },
        ),
        migrations.RemoveField(
            model_name='mailingmessage',
            name='newsletter',
        ),
        migrations.AlterModelOptions(
            name='newsletter',
            options={'permissions': [('change_activity', 'Change activity')], 'verbose_name': 'рассылка', 'verbose_name_plural': 'рассылки'},
        ),
        migrations.RemoveField(
            model_name='newsletter',
            name='mailing_status',
        ),
        migrations.RemoveField(
            model_name='newsletter',
            name='periodicity',
        ),
        migrations.RemoveField(
            model_name='newsletter',
            name='recipient',
        ),
        migrations.AddField(
            model_name='newsletter',
            name='frequency',
            field=models.CharField(choices=[('daily', 'Ежедневно'), ('weekly', 'Еженедельно'), ('monthly', 'Ежемесячно')], default=('daily', 'Ежедневно'), max_length=15, verbose_name='периодичность'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='активность рассылки'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='название рассылки'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='start_date',
            field=models.DateField(default=False, verbose_name='дата рассылки'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='status',
            field=models.CharField(choices=[('created', 'Создана'), ('started', 'Запущена'), ('completed', 'Завершена')], default=('created', 'Создана'), max_length=10, verbose_name='статус рассылки'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='mailing_time',
            field=models.TimeField(default='00:00', verbose_name='время рассылки'),
        ),
        migrations.DeleteModel(
            name='MailingLog',
        ),
        migrations.DeleteModel(
            name='MailingMessage',
        ),
        migrations.AddField(
            model_name='message',
            name='newsletter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='newsletter.newsletter', verbose_name='рассылка'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AddField(
            model_name='log',
            name='message',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='newsletter.message', verbose_name='письмо'),
        ),
        migrations.AddField(
            model_name='log',
            name='newsletter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.newsletter', verbose_name='рассылка'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='clients',
            field=models.ManyToManyField(to='newsletter.client', verbose_name='получатели'),
        ),
    ]
